-- 데이터무결성(PK/FK)실습
-- 제약조건(Constraint)
-- 테이블의 컬럼에 유효하지 않는 값을 걸러내기 위해 걸어주는 것
-- 무결성 제약조건 : NOT NULL 조건
CREATE TABLE CUSTOMER (
            ID VARCHAR2(20) NOT NULL, -- 무결성 제약조건
            PWD VARCHAR2(20) NOT NULL,
            NAME VARCHAR2(20) NOT NULL,
            PHONE VARCHAR2(30),
            ADDRESS VARCHAR2(100)
);

-- NOT NULL INSERT 테스트
INSERT INTO CUSTOMER
VALUES(NULL, NULL, NULL, '010-1111-1111', 'BUSAN'); -- 제약조건 때문에 에러발생

-- UNIQUE : 테이블의 컬럼에 무조건 유일한 값만 들어갈 수 있게 함(중복 허용 안함)
CREATE TABLE CUSTOMER2 (
            ID VARCHAR2(20) UNIQUE,
            PWD VARCHAR2(20) NOT NULL,
            NAME VARCHAR2(20) NOT NULL,
            PHONE VARCHAR2(30),
            ADDRESS VARCHAR2(100)
);

INSERT INTO CUSTOMER2
VALUES('1', '1111', '홍길동', '010-1111-1111', 'BUSAN'); 

INSERT INTO CUSTOMER2
VALUES('1', '1111', '이순신', '010-1111-1111', 'BUSAN'); -- 중복된 데이터라서 에러남

-- 제약조건에 이름을 지정할 수 있다
CREATE TABLE CUSTOMER3 (
            ID VARCHAR2(20) CONSTRAINT UK_ID UNIQUE, 
            PWD VARCHAR2(20) NOT NULL,
            NAME VARCHAR2(20) NOT NULL,
            PHONE VARCHAR2(30),
            ADDRESS VARCHAR2(100)
);

-- 제약조건을 보는 딕셔너리
SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'CUSTOMER3';

-- ★★ Primary Key ★★
-- UNIQUE + NOT NULL 효과 : 유일한 값 + NOT NULL 조건 + INDEX자동생성
CREATE TABLE CUSTOMER4 (
            ID VARCHAR2(20), 
            PWD VARCHAR2(20) NOT NULL,
            NAME VARCHAR2(20) NOT NULL,
            PHONE VARCHAR2(30),
            ADDRESS VARCHAR2(100),
            CONSTRAINT PK_ID PRIMARY KEY(ID)
);

INSERT INTO CUSTOMER4
VALUES(NULL, '1111', '홍길동', '010-1111-1111', 'BUSAN');

INSERT INTO CUSTOMER4
VALUES(NULL, '1111', '이순신', '010-1111-1111', 'BUSAN');

-- FOREIGN KEY : 참조되는 테이블에 컬럼값이 항상 존재해야 함
-- 부모테이블(ID : 1,2,3) - 자식테이블(ID:1,2,3, FDSA<- 에러남)
-- 부모테이블에 있는 값만 자식테이블에 존재해야 한다.
-- 예) 부모테이블 : 부서테이블(영업,기술,운영), 자식테이블(교육->에러/영업, 기술, 운영) : 직원 = FK (참조 무결성)

-- 예) 부서테이블
SELECT * FROM DEPARTMENT;

-- FK 테스트 테이블
CREATE TABLE EMP_SECOND (
    ENO NUMBER(4) CONSTRAINT PK_ENO PRIMARY KEY,
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    DNO NUMBER(2) CONSTRAINT FK_DNO2 REFERENCES DEPARTMENT);
    
INSERT INTO EMP_SECOND (ENO, ENAME, DNO)
VALUES (8000, '이순신', 70);

-- DEFAULT 제약조건 : 컬럼에 데이터가 아무런 값이 입력되지 않았을 때 디폴트로 저장된 값이 입력됨
CREATE TABLE EMP_THIRD (
    ENO NUMBER(4) CONSTRAINT PK_ENO2 PRIMARY KEY,
    ENAME VARCHAR2(10),
    SALARY NUMBER(7,2) DEFAULT 1000);
 
 -- DEFAULT 테스트
 INSERT INTO EMP_THIRD(ENO, ENAME)
 VALUES(8000,'홍길동');
 
 -- 데이터 확인
 SELECT * FROM EMP_THIRD;
 
 -- 테이블 정리
 SELECT TABLE_NAME FROM USER_TABLES;

DROP TABLE EMP_THIRD;
DROP TABLE EMP_SECOND;
DROP TABLE CUSTOMER4;
DROP TABLE CUSTOMER3;
DROP TABLE CUSTOMER2;
DROP TABLE CUSTOMER;
DROP TABLE DEPT_COPY;
DROP TABLE EMP_COPY;
DROP TABLE EMP_INSERT;

-- EMP_COPY 테이블 생성
CREATE TABLE EMP_COPY AS
SELECT * FROM EMPLOYEE;

-- DEPT_COPY 테이블 생성
CREATE TABLE DEPT_COPY AS
SELECT * FROM DEPARTMENT;

-- 테이블 만들고 난 후에 제약조건 걸기
-- EMP_COPY PRIMARY KEY 생성
ALTER TABLE EMP_COPY
ADD CONSTRAINT PK_EMP_COPY_ENO PRIMARY KEY(ENO);

-- DEPT_COPY PRIMARY KEY 생성
ALTER TABLE DEPT_COPY
ADD CONSTRAINT PK_EMP_COPY_DNO PRIMARY KEY(DNO);

SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME='EMP_COPY';

-- FOREIGN KEY 생성
ALTER TABLE EMP_COPY
ADD CONSTRAINT FK_EMP_COPY_DNO
FOREIGN KEY(DNO) REFERENCES DEPT_COPY(DNO);

-- 제약조건이 생성된 후 삭제하기
-- 에러) 먼저 자식테이블의 FOREIGN KEY를 제거하고, 부모 테이블의 PRIMARY KEY를 제거해야 함
ALTER TABLE DEPT_COPY
DROP PRIMARY KEY; -- 에러발생

-- 알아서 삭제해주세요 명령
-- PRIMARY KEY와 동시에 자식테이블의 FOREIGN KEY를 찾아서 알아서 삭제해줌
ALTER TABLE DEPT_COPY
DROP PRIMARY KEY CASCADE;

SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'DEPT_COPY';

SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'EMP_COPY';


-- 제약조건을 보는 딕셔너리 SQL문
SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'EMP_COPY';

-- 제약조건에 따른 테이블, 컬럼을 보는 SQL문
SELECT B.TABLE_NAME, A.COLUMN_NAME, B.CONSTRAINT_TYPE
FROM USER_CONS_COLUMNS A, USER_CONSTRAINTS B
WHERE A.CONSTRAINT_NAME = B.CONSTRAINT_NAME
AND B.TABLE_NAME NOT LIKE 'BIN%'
ORDER BY B.TABLE_NAME;